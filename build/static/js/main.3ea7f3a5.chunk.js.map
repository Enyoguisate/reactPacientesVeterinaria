{"version":3,"sources":["components/Header.js","components/NuevaCita.js","components/Cita.js","components/ListaCitas.js","App.js","serviceWorker.js","index.js"],"names":["Header","titulo","className","prototype","PropTypes","string","isRequired","stateInicial","cita","mascota","propietario","fecha","hora","sintomas","error","NuevaCita","state","handleChange","e","setState","target","name","value","isEmpty","handleSubmit","preventDefault","nuevaCita","id","uuid","props","crearNuevaCita","this","onSubmit","type","placeholder","onChange","Component","Cita","eliminarCita","onClick","ListaCitas","citas","console","log","mensaje","Object","keys","length","map","key","App","datos","filter","JSON","parse","localStorage","getItem","setItem","stringify","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ea7f3a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../bootstrap.min.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({titulo}) => ( \r\n    <header>\r\n        <h1 className=\"text-center\">{titulo}</h1>\r\n    </header>\r\n);\r\n\r\nHeader.prototype = {\r\n    titulo : PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst stateInicial = ({\r\n    cita: {\r\n        mascota: '',\r\n        propietario: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n    },\r\n    error: false\r\n});\r\n\r\nclass NuevaCita extends Component {\r\n    state = ({...stateInicial});\r\n\r\n    handleChange = (e) => {\r\n        this.setState({error:false});\r\n        this.setState({cita:{...this.state.cita,[e.target.name]: e.target.value}});\r\n    }\r\n\r\n    isEmpty = () => {\r\n        return this.state.cita.mascota === '' || this.state.cita.propietario === '' || this.state.cita.fecha === '' || this.state.cita.hora === '' || this.state.cita.sintomas === '';\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {mascota, propietario, fecha, hora, sintomas } = this.state.cita;\r\n\r\n        if ( this.isEmpty() ) {\r\n            this.setState({error:true});\r\n            return;\r\n        } else {\r\n            this.setState({error:false});\r\n            const nuevaCita = {...this.state.cita};\r\n            nuevaCita.id = uuid();\r\n            this.props.crearNuevaCita(nuevaCita);\r\n            this.setState({...stateInicial});\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        const { error } = this.state;\r\n\r\n        return ( \r\n            <div className=\"card mt-5 py-t\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title text-center mb-5\">\r\n                        Llena el formulario para crear Nueva Cita\r\n                    </h2>\r\n\r\n                    { error ? <div className=\"alert alert-danger mt-2 mb-5 text-center\">Todos los campos son obligatorios</div> : null }\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Mascota</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <input \r\n                                    id=\"mascota\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre Mascota\"\r\n                                    name=\"mascota\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.cita.mascota}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Dueño</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <input \r\n                                    id=\"duenio\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre Dueño Mascota\"\r\n                                    name=\"propietario\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.cita.propietario}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\r\n                            <div className=\"col-sm-8 col-lg-4\">\r\n                                <input \r\n                                    id=\"fecha\"\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"fecha\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.cita.fecha}\r\n                                />\r\n                            </div>\r\n                        \r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\r\n                            <div className=\"col-sm-8 col-lg-4\">\r\n                                <input \r\n                                    id=\"hora\"\r\n                                    type=\"time\"\r\n                                    className=\"form-control\"\r\n                                    name=\"hora\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.cita.hora}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Sintomas</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <textarea id=\"sintomas\" className=\"form-control\" name=\"sintomas\" placeholder=\"Describe los sintomas\" onChange={this.handleChange}\r\n                                  value={this.state.cita.sintomas}  />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"py-3 mt-2 btn btn-success btn-block\" value=\"Agregar Nueva Cita\"></input>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNuevaCita.propTypes = {\r\n    crearNuevaCita: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NuevaCita;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cita = ({cita, eliminarCita}) => {\r\n    return ( \r\n        <div className=\"media mt-3\">\r\n            <div className=\"media-body\">\r\n                <h3 className=\"mt-0\">{cita.mascota}</h3>\r\n                <p className=\"card-text\">\r\n                    <span>Nombre Dueño:</span> {cita.propietario}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                    <span>Fecha:</span> {cita.fecha}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                    <span>Hora:</span> {cita.hora}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                    <span>Sintomas:</span>\r\n                </p>\r\n                <p className=\"card-text\">\r\n                    {cita.sintomas}\r\n                </p>\r\n                <button \r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => eliminarCita(cita.id)}>\r\n                        Borrar &times;\r\n                </button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Cita;\r\n","import React from 'react';\r\nimport Cita from './Cita'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListaCitas = ({citas, eliminarCita}) => {\r\n    console.log('citas', citas)\r\n    const mensaje = Object.keys(citas).length === 0 ? 'No hay Citas' : 'Administra las Citas Aqui'\r\n    return (\r\n        <div className=\"card mt-2 py-5\">\r\n            <div className=\"card-body\">\r\n                <h2 className=\"card-title text-center\">\r\n                    {mensaje}\r\n                </h2>\r\n                <div className=\"lista-citas\">\r\n                    {citas.map(cita => (\r\n                        <Cita \r\n                            key={cita.id}\r\n                            cita={cita}\r\n                            eliminarCita={eliminarCita}\r\n                            >\r\n                        </Cita>))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nListaCitas.propTypes = {\r\n    citas: PropTypes.array.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\n \r\nexport default ListaCitas;\r\n","import React, { Component } from 'react';\nimport './bootstrap.min.css';\nimport Header from './components/Header';\nimport NuevaCita from './components/NuevaCita';\nimport ListaCitas from './components/ListaCitas';\n\nclass App extends Component {\n\n  state = {\n    citas: []\n  }\n\n  componentDidMount() {\n    const citas = JSON.parse(localStorage.getItem('citas'));\n    this.setState({citas: citas ? citas : []});\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('citas', JSON.stringify(this.state.citas));\n  }\n\n  crearNuevaCita = datos => {\n    console.log('datos', datos);\n    const citas = [...this.state.citas, datos];\n    this.setState({citas})\n  }\n\n  eliminarCita = id => {\n    console.log('id', id)\n    const citasActuales = [...this.state.citas];\n    const citas = citasActuales.filter( cita =>  cita.id !== id);\n    console.log('citas', citas);\n    this.setState({citas});\n  }\n\n  render () {\n    return (\n      <div className=\"container\">\n        <Header titulo='Administrador pacientes veterinaria'/>\n        <div className=\"row\">\n          <div className=\"col-md-10 mx-auto\">\n            <NuevaCita\n              crearNuevaCita={this.crearNuevaCita}\n            ></NuevaCita>\n          </div>\n\n          <div className=\"mt-5 col-md-10 mx-auto\">\n            <ListaCitas\n              citas={this.state.citas}\n              eliminarCita={this.eliminarCita}\n              ></ListaCitas>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}